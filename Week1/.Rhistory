q()
find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
find.package("KernSmooth")
library("KernSmooth")
a<-available.packages()
head(rownames(a),3)
# devtools is a handypackage to have
## devtools is a handypackage to have
## show the contents of new package matrix
head(rownames(a),3)
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures","AnnotationDbi"))
install.packages("ggplot2")
library(ggplot2)
search()
x + y ## by default r will return the value of the last expression in fcn
add2 <- function(x,y){
x + y ## by default r will return the value of the last expression in fcn
}
add2(3,2)
above <- function(x, n){
use <- x > n
x[use]
}
x <- 1:20
above(x, 10)
above <- function(x, n = 10){
use <- x > n
x[use]
}
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
}
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i])
}
means
}
getwd
getwd()
source(hw1_data.csv)
source("hw1_data.csv")
cwd
ls
ls()
dir
dir()
cd
getwd
getwd()
setwd("~/Coursera/Coursera_RProgramming/Week1")
source("hw1_data.csv")
source(hw1_data.csv)
airquality <- read.csv("hw1_data.csv")
columnemean(airquality)
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i], removeNA)
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[, i],na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, false)
columnmean(airquality, F)
search
search()
make.power <- function(n){
pow <- function(x){
x^n
}
pow
}
cube <- make.power(3)
cube(3)
x <- Sys.time()
x
p <- as.POSIXlt(x)
names(unclass(p))
pSec
p
unpackedP <- names(unclass(p))
unpackedP
unpackedP[sec]
unpackedP['sec']
unpackedP['mine']
unpackedP['min']
unpackedP['hour']
unpackedP
p$sec
unclass(x)
datestring <- c("January 10, 2012 10:40","December 9, 2011")
x <- strptime(datestring, "%B %d %Y %H:%M")
x
class(x)
?strtime
?strptime
datestring
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
class(x)
datestring <- c("January 10, 2012 10:40","December 9, 2011 9:10")
class(x)
x <- strptime(datestring, "%B %d, %Y %H:%M")
x
class(x)
x <- as.Date("2012-01-01")
y <- strptime("9 Jan 2011 11:34:21", "%d %b %Y %H:%M:%S")
x-y
x <- as.POSIXlt(x)
x-y
y <- as.POSIXct("2012-10-25 06:00:00", tz="GMT")
y
